<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="drc">

  <xacro:macro name="v1_actuator" params="name api">
    <actuator name="${name}" type="${api}"/>
  </xacro:macro>

  <xacro:macro name="cylinder_link" params="name radius length mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${mass*(3*radius*radius + length*length)/12}" ixy="0.0" ixz="0.0"
                 iyy="${mass*(3*radius*radius + length*length)/12}" iyz="0.0"
                 izz="${0.5*mass*radius*radius}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <cylinder radius="${radius}" length="${length}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="cylinder_link_no_mesh" params="name radius length mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${mass*(3*radius*radius + length*length)/12}" ixy="0.0" ixz="0.0"
                 iyy="${mass*(3*radius*radius + length*length)/12}" iyz="0.0"
                 izz="${0.5*mass*radius*radius}" />
      </inertial>
      <visual>
        <geometry>
          <cylinder radius="${radius}" length="${length}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
    </link>
  </xacro:macro>

  <xacro:macro name="box_link" params="name width height depth mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <box size="${width} ${height} ${depth}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="box_link_primitive_collision" params="name width height depth mass origin_xyz origin_rpy visual_mesh material">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="0.1"  ixy="0.0" ixz="0.0"
                 iyy="0.1" iyz="0.0"
                 izz="0.1" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <box size="${width} ${height} ${depth}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <material name="${material}"/>
      </visual>
      <collision>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="box_link_inertia" params="name mass origin_xyz origin_rpy ixx iyy izz visual_mesh visual_mesh_scale material collision_mesh collision_mesh_scale">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}"  ixy="0.0" ixz="0.0"
                 iyy="${iyy}" iyz="0.0"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}" scale="${visual_mesh_scale}"/>
          <!-- <box size="${width} ${height} ${depth}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}" scale="${collision_mesh_scale}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="box_link_no_mesh" params="name width height depth mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="link_no_mesh" params="name width height depth mass origin_xyz origin_rpy ixx ixy ixz iyy iyz izz">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}"  ixy="${ixy}" ixz="${ixz}"
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      </collision>
    </link>
  </xacro:macro>


  <xacro:macro name="box_link_no_collision" params="name width height depth mass origin_xyz origin_rpy visual_mesh material">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <box size="${width} ${height} ${depth}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <material name="${material}"/>
      </visual>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="sphere_link" params="name radius mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${2*mass*radius*radius/5}" ixy="0.0" ixz="0.0"
                 iyy="${2*mass*radius*radius/5}" iyz="0.0"
                 izz="${2*mass*radius*radius/5}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <sphere radius="${radius}"/> -->
        </geometry>
        <material name="${material}"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="virtual_link_sphere" params="name radius mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${2*mass*radius*radius/5}" ixy="0.0" ixz="0.0"
                 iyy="${2*mass*radius*radius/5}" iyz="0.0"
                 izz="${2*mass*radius*radius/5}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <sphere radius="${radius}"/>
        </geometry>
        <material name="Gray"/>
      </visual>
    </link>
  </xacro:macro>

  <!-- Its seems that zero mass links are not kosher. I can't find any solid data, only suggestions from people
  as to what small but not too small should be for mass numbers.

  Until better evidence/experience says otherwise, we will use a mass that is ~0.1% * total_mass, and
  the inertia properties of a cylinder. Justification: Most of these virtual links are the rotor attached
  to gearing and any attachment structure.
   -->
  <xacro:property name="virtual_link_mass" value="0.1"/>
  <xacro:property name="virtual_link_radius" value="0.05"/>
  <xacro:property name="virtual_link_height" value="0.05"/>
  <xacro:macro name="virtual_link" params="name origin_xyz origin_rpy">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
    </link>
  </xacro:macro>

  <xacro:macro name="virtual_link_with_visual" params="name origin_xyz origin_rpy mesh_filename">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
        <material name="gold">
          <color rgba="1 0.67 0 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="revolute_joint" params="jointName parent child origin_xyz origin_rpy *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="revolute_joint_damped" params="jointName parent child origin_xyz origin_rpy damping friction *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <dynamics damping="${damping}" friction="${friction}"/>
      <xacro:insert_block name="limits" />
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="revolute_joint_ex" params="jointName parent child origin_xyz origin_rpy *limits *controller_gains">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <xacro:insert_block name="controller_gains" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="floating_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="floating">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="prismatic_joint_axis" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="prismatic">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <dynamics damping="1.0" friction="0.0"/>
      <xacro:insert_block name="limits" />
    </joint>
  </xacro:macro>

  <xacro:macro name="revolute_joint_axis" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="fixed_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="fixed">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="virtual_fixed_frame_offset" params="name parentLink origin_xyz origin_rpy">
    <xacro:virtual_link name="${name}_Frame"
                    origin_rpy="0 0 0"
                    origin_xyz="0 0 0"/>

    <xacro:fixed_joint jointName="${name}_Offset"
                       parent="${parentLink}" child="${name}_Frame"
                       origin_rpy="${origin_rpy}"
                       origin_xyz="${origin_xyz}"/>
  </xacro:macro>

  <xacro:macro name="v1_modes" params="jointName actuatorName">
    <mode name="${jointName}Mode" type="mode_plugins/ModeInterface">
      <translator name="${jointName}ModeData" type="${mode_data_interface}">
        <joint    name="${jointName}" data="mode"/>
        <actuator name="${actuatorName}" data="mode"/>
      </translator>
      <translator name="${jointName}ModeCommand" type="${mode_command_interface}">
        <joint    name="${jointName}" data="modeCommand"/>
        <actuator name="${actuatorName}" data="modeCommand"/>
      </translator>
    </mode>
  </xacro:macro>

  <xacro:macro name="ros_control_simple_transmission" params="jointName actuatorName reduction tc">
     <transmission name="${jointName}Transmission">
       <type>transmission_interface/SimpleTransmission</type>
       <joint name="${jointName}"/>
       <actuator name="${actuatorName}">
         <hardwareInterface>EffortJointInterface</hardwareInterface>
         <mechanicalReduction>${reduction}</mechanicalReduction>
       </actuator>
       <motorTorqueConstant>${tc}</motorTorqueConstant>
     </transmission>
  </xacro:macro>

  <xacro:macro name="simple_transmission" params="jointName actuatorName reduction offset">
    <transmission name="${jointName}Transmission" type="loadable_transmissions/SimpleTransmission">
    <mechanicalReduction>${reduction}</mechanicalReduction>
      <jointOffset>${offset}</jointOffset>
      <interface type="ActuatorToJointStateInterface">
        <joint name="${jointName}" data="data"/>
        <actuator name="${actuatorName}" data="data"/>
      </interface>
      <interface type="JointToActuatorPositionInterface">
        <joint name="${jointName}" data="positionCommand"/>
        <actuator name="${actuatorName}" data="positionCommand"/>
      </interface>
      <interface type="JointToActuatorVelocityInterface">
        <joint name="${jointName}" data="velocityCommand"/>
        <actuator name="${actuatorName}" data="velocityCommand"/>
      </interface>
      <interface type="JointToActuatorEffortInterface">
        <joint name="${jointName}" data="effortCommand"/>
        <actuator name="${actuatorName}" data="effortCommand"/>
      </interface>
      <interface type="JointToActuatorStateInterface">
        <joint name="${jointName}" data="data"/>
        <actuator name="${actuatorName}" data="data"/>
      </interface>
      <interface type="ActuatorToJointPositionInterface">
        <joint name="${jointName}" data="positionCommand"/>
        <actuator name="${actuatorName}" data="positionCommand"/>
      </interface>
      <interface type="ActuatorToJointVelocityInterface">
        <joint name="${jointName}" data="velocityCommand"/>
        <actuator name="${actuatorName}" data="velocityCommand"/>
      </interface>
      <interface type="ActuatorToJointEffortInterface">
        <joint name="${jointName}" data="effortCommand"/>
        <actuator name="${actuatorName}" data="effortCommand"/>
      </interface>
    </transmission>
  </xacro:macro>

  <xacro:macro name="pushrod_transmission" params="tranName namespace reflect joint1 joint2 actuator1 actuator2">
    <transmission name="${tranName}" type="loadable_transmissions/PushrodTransmission">
      <interface type="ActuatorToJointStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <actuator name="${actuator1}" data="data"/>
        <actuator name="${actuator2}" data="data"/>
      </interface>
      <interface type="JointToActuatorPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <actuator name="${actuator1}" data="positionCommand"/>
        <actuator name="${actuator2}" data="positionCommand"/>
      </interface>
      <interface type="JointToActuatorVelocityInterface">
        <joint name="${joint1}" data="velocityCommand"/>
        <joint name="${joint2}" data="velocityCommand"/>
        <actuator name="${actuator1}" data="velocityCommand"/>
        <actuator name="${actuator2}" data="velocityCommand"/>
      </interface>
      <interface type="JointToActuatorEffortInterface">
        <joint name="${joint1}" data="effortCommand"/>
        <joint name="${joint2}" data="effortCommand"/>
        <actuator name="${actuator1}" data="effortCommand"/>
        <actuator name="${actuator2}" data="effortCommand"/>
      </interface>
      <interface type="JointToActuatorStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <actuator name="${actuator1}" data="data"/>
        <actuator name="${actuator2}" data="data"/>
      </interface>
      <interface type="ActuatorToJointPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <actuator name="${actuator1}" data="positionCommand"/>
        <actuator name="${actuator2}" data="positionCommand"/>
      </interface>
      <interface type="ActuatorToJointVelocityInterface">
        <joint name="${joint1}" data="velocityCommand"/>
        <joint name="${joint2}" data="velocityCommand"/>
        <actuator name="${actuator1}" data="velocityCommand"/>
        <actuator name="${actuator2}" data="velocityCommand"/>
      </interface>
      <interface type="ActuatorToJointEffortInterface">
        <joint name="${joint1}" data="effortCommand"/>
        <joint name="${joint2}" data="effortCommand"/>
        <actuator name="${actuator1}" data="effortCommand"/>
        <actuator name="${actuator2}" data="effortCommand"/>
      </interface>
      <parameterNamespace name="${namespace}" />
      <reflect data="${reflect}" />
    </transmission>
  </xacro:macro>

  <xacro:macro name="finger2_transmission" params="tranName joint1 joint2 actuator">
    <transmission name="${tranName}" type="loadable_transmissions/FingerTransmission">
      <interface type="ActuatorToJointStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="JointToActuatorPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <interface type="JointToActuatorStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="ActuatorToJointPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <reducer reduction="${1/2}" offset="0"/>
      <reducer reduction="${1/2}" offset="0"/>
    </transmission>
  </xacro:macro>

  <xacro:macro name="finger3_transmission" params="tranName joint1 joint2 joint3 actuator">
    <transmission name="${tranName}" type="loadable_transmissions/FingerTransmission">
      <interface type="ActuatorToJointStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <joint name="${joint3}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="JointToActuatorPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <joint name="${joint3}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <interface type="JointToActuatorStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <joint name="${joint3}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="ActuatorToJointPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <joint name="${joint3}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <reducer reduction="${1/3}" offset="0"/>
      <reducer reduction="${1/3}" offset="0"/>
      <reducer reduction="${1/3}" offset="0"/>
    </transmission>
  </xacro:macro>

  <xacro:macro name="finger4_transmission" params="tranName joint1 joint2 joint3 joint4 actuator">
    <transmission name="${tranName}" type="loadable_transmissions/FingerTransmission">
      <interface type="ActuatorToJointStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <joint name="${joint3}" data="data"/>
        <joint name="${joint4}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="JointToActuatorPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <joint name="${joint3}" data="positionCommand"/>
        <joint name="${joint4}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <interface type="JointToActuatorStateInterface">
        <joint name="${joint1}" data="data"/>
        <joint name="${joint2}" data="data"/>
        <joint name="${joint3}" data="data"/>
        <joint name="${joint4}" data="data"/>
        <actuator name="${actuator}" data="data"/>
      </interface>
      <interface type="ActuatorToJointPositionInterface">
        <joint name="${joint1}" data="positionCommand"/>
        <joint name="${joint2}" data="positionCommand"/>
        <joint name="${joint3}" data="positionCommand"/>
        <joint name="${joint4}" data="positionCommand"/>
        <actuator name="${actuator}" data="positionCommand"/>
      </interface>
      <reducer reduction="${1/4}" offset="0"/>
      <reducer reduction="${1/4}" offset="0"/>
      <reducer reduction="${1/4}" offset="0"/>
      <reducer reduction="${1/4}" offset="0"/>
    </transmission>
  </xacro:macro>

</robot>
